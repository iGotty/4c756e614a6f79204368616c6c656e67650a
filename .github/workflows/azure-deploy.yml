name: Build and deploy to Azure App Service

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: '4c756e614a6f79204368616c6c656e67650a'
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    # Build React frontend
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install and build LunaJoy Matching Engine
      run: |
        cd frontend
        npm ci
        npm run build
        cd ..
        
    # Copy built frontend to backend static folder
    - name: Copy frontend build to backend
      run: |
        mkdir -p backend/static
        cp -r frontend/build/* backend/static/
        
        # Debug: verificar que se copiaron los archivos
        echo "📁 Contents of backend/static:"
        ls -la backend/static/
        echo "📁 Checking for index.html:"
        ls -la backend/static/index.html
    
    # Setup Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install Python dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        cd ..
        
    # Create startup.txt if it doesn't exist
    - name: Create startup configuration
      run: |
        cd backend
        echo "gunicorn --bind=0.0.0.0:8000 --timeout 600 --access-logfile '-' --error-logfile '-' --workers 4 --worker-class uvicorn.workers.UvicornWorker main:app" > startup.txt
        cd ..
        
    # Create deployment package
    - name: Create deployment package
      run: |
        cd backend
        
        # Create deployment package including all files
        zip -r ../deploy.zip . \
          -x "*.pyc" \
          -x "__pycache__/*" \
          -x "venv/*" \
          -x ".git/*" \
          -x "*.db" \
          -x ".env" \
          -x ".pytest_cache/*" \
          -x "node_modules/*"
          
        cd ..
        
        # Debug: verificar el tamaño del zip
        echo "📦 Deployment package size:"
        ls -lh deploy.zip
        
    # Deploy to Azure
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ./deploy.zip