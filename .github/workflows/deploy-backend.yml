name: Deploy Backend API to Azure

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: 'lunajoy-backend-api'
  PYTHON_VERSION: '3.11'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Setup Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Create and test deployment package
      run: |
        # Navigate to backend
        cd backend
        
        # Show structure
        echo "üìÅ Backend structure:"
        find . -type f -name "*.py" | head -20
        
        # Ensure main.py exists
        if [ ! -f "main.py" ]; then
          echo "‚ùå main.py not found!"
          exit 1
        fi
        
        # Create requirements.txt without Windows-specific packages
        echo "üì¶ Cleaning requirements.txt"
        grep -v "pywin32" requirements.txt > requirements-clean.txt || cp requirements.txt requirements-clean.txt
        mv requirements-clean.txt requirements.txt
        
        # Add gunicorn if not present
        grep -q "gunicorn" requirements.txt || echo "gunicorn==21.2.0" >> requirements.txt
        grep -q "uvicorn" requirements.txt || echo "uvicorn[standard]==0.24.0" >> requirements.txt
        
        # Create startup command
        echo "üìù Creating startup.txt"
        echo "gunicorn --bind=0.0.0.0:8000 --timeout 600 --access-logfile '-' --error-logfile '-' --workers 4 --worker-class uvicorn.workers.UvicornWorker main:app" > startup.txt
        
        # Ensure data directory exists
        if [ ! -d "data" ] && [ -d "../data" ]; then
          echo "üìÅ Copying data from parent directory"
          cp -r ../data .
        fi
        
        # Show what we're deploying
        echo "üìã Files to deploy:"
        ls -la
        
        cd ..
        
    # Deploy to Azure - Using ZIP deploy directly
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_BACKEND }}
        package: ./backend
        
    # Wait and verify
    - name: Wait for deployment
      run: |
        echo "‚è≥ Waiting 60 seconds for deployment to complete..."
        sleep 60
        
    # Check deployment - No fallar si hay errores
    - name: Check deployment
      continue-on-error: true
      run: |
        echo "üîç Checking endpoints..."
        
        # Check root
        echo "Checking root endpoint..."
        curl -s https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/ || echo "‚ö†Ô∏è Root not ready yet"
        
        # Check health
        echo "Checking health endpoint..."
        curl -s https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/api/health || echo "‚ö†Ô∏è Health not ready yet"
        
        # Check test endpoint
        echo "Checking test endpoint..."
        curl -s https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/test || echo "‚ö†Ô∏è Test not ready yet"
        
        echo "üìä Deployment complete - Check Azure Portal for logs"
        echo "üìö API docs should be at: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/docs"